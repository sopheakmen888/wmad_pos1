// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  username  String    @db.VarChar(255)
  email     String    @unique @db.VarChar(255)
  password  String    @db.VarChar(255)
  roleId    Int
  role      Role      @relation("RoleToUser", fields: [roleId], references: [id])
  isActive  Boolean   @default(true)
  imageUrl  String?   @db.Text
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt

  @@map("user")
}

model Role {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  users       User[]    @relation("RoleToUser")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt

  @@map("role")
}

model ProductCategory {
  id        Int       @id @default(autoincrement())
  nameEn    String    @db.VarChar(255)
  nameKh    String?   @db.VarChar(255)
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  products  Product[]

  @@map("product_category")
}

model Product {
  id             Int              @id @default(autoincrement())
  productCode    String           @unique
  nameEn         String           @db.VarChar(255)
  nameKh         String?          @db.VarChar(255)
  categoryId     Int
  sku            String?          @db.VarChar(255)
  imageUrl       String?          @db.Text
  createdAt      DateTime         @default(now())
  createdBy      Int
  updatedAt      DateTime?        @updatedAt
  updatedBy      Int
  category       ProductCategory  @relation(fields: [categoryId], references: [id])
  StockInDetail  StockInDetail[]
  SaleItemDetail SaleItemDetail[]

  @@map("product")
}

model Supplier {
  id                Int       @id @default(autoincrement())
  supplierName      String    @db.VarChar(255)
  contactName       String?   @db.VarChar(255)
  contactEmail      String?   @db.VarChar(255)
  contactPhone      String?   @db.VarChar(20)
  addressLine1      String?   @db.VarChar(255)
  addressLine2      String?   @db.VarChar(255)
  province          String?   @db.VarChar(255)
  websiteUrl        String?   @db.Text
  imageUrl          String?   @db.Text
  taxIdentification String?   @db.VarChar(50)
  createdAt         DateTime  @default(now())
  updatedAt         DateTime? @updatedAt
  StockIn           StockIn[]

  @@map("supplier")
}

model StockIn {
  id              Int             @id @default(autoincrement())
  supplierId      Int
  referenceNumber String          @db.VarChar(255)
  stockInDate     DateTime
  createdAt       DateTime        @default(now())
  updatedAt       DateTime?       @updatedAt
  supplier        Supplier        @relation(fields: [supplierId], references: [id])
  stockInDetails  StockInDetail[]

  @@map("stock_in")
}

model StockInDetail {
  id                Int       @id @default(autoincrement())
  stockInId         Int
  productId         Int
  quantity          Int
  purchaseUnitPrice Decimal   @db.Decimal(10, 3)
  saleUnitPrice     Decimal   @db.Decimal(10, 3)
  totalPrice        Decimal   @db.Decimal(10, 3)
  expiryDate        DateTime?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime? @updatedAt
  stockIn           StockIn   @relation(fields: [stockInId], references: [id])
  product           Product   @relation(fields: [productId], references: [id])

  @@map("stock_in_detail")
}

model SaleItemMaster {
  id                  Int              @id @default(autoincrement())
  transactionCode     String           @db.VarChar(255)
  transactionDate     DateTime
  totalAmount         Decimal          @db.Decimal(10, 3)
  totalDiscountAmount Decimal?         @db.Decimal(10, 3)
  vatAmount           Decimal?         @db.Decimal(10, 3)
  grandTotalAmount    Decimal          @db.Decimal(10, 3)
  paymentMethod       String?          @db.VarChar(50)
  promotionId         Int?
  createdAt           DateTime         @default(now())
  updatedAt           DateTime?        @updatedAt
  promotion           Promotion?       @relation(fields: [promotionId], references: [id])
  saleItemDetails     SaleItemDetail[]
  customerId          Int
  customer            Customer         @relation("CustomerSaleItemMaster", fields: [customerId], references: [id])

  @@map("sale_item_master")
}

model SaleItemDetail {
  id                 Int            @id @default(autoincrement())
  transactionId      Int
  productId          Int
  quantity           Int
  unitPrice          Decimal        @db.Decimal(10, 3)
  discountPercentage Decimal?       @db.Decimal(5, 2)
  discountAmount     Decimal?       @db.Decimal(10, 3)
  vatPercentage      Decimal?       @db.Decimal(5, 2)
  vatAmount          Decimal?       @db.Decimal(10, 3)
  totalAmount        Decimal        @db.Decimal(10, 3)
  grandTotalAmount   Decimal        @db.Decimal(10, 3)
  createdAt          DateTime       @default(now())
  updatedAt          DateTime?      @updatedAt
  transaction        SaleItemMaster @relation(fields: [transactionId], references: [id])
  product            Product        @relation(fields: [productId], references: [id])

  @@map("sale_item_detail")
}

model Promotion {
  id                 Int              @id @default(autoincrement())
  promotionCode      String           @unique
  description        String?
  startDate          DateTime
  endDate            DateTime
  discountPercentage Decimal          @db.Decimal(5, 2)
  imageUrl           String?          @db.Text
  createdAt          DateTime         @default(now())
  updatedAt          DateTime?        @updatedAt
  saleItemMasters    SaleItemMaster[]

  @@map("promotion")
}

model Customer {
  id              Int              @id @default(autoincrement())
  firstName       String           @db.VarChar(255)
  lastName        String           @db.VarChar(255)
  email           String?          @db.VarChar(255)
  phone           String?          @db.VarChar(20)
  address         String?          @db.VarChar(255)
  createdAt       DateTime         @default(now())
  updatedAt       DateTime?        @updatedAt
  saleItemMasters SaleItemMaster[] @relation("CustomerSaleItemMaster")

  @@map("customer")
}
